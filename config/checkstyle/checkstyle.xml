<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
	<module name="SuppressionFilter">
		<property name="file" value="${config_loc}/customSuppressions.xml"/>
	</module>
	<!-- Checks for Size Violations.                    -->
	<module name="LineLength">
		<!-- what is a good max value? -->
		<property name="max" value="200"/>
		<property name="ignorePattern" value="(^ *\* *[^ ]+$)|//.+"/>
	</module>
	<module name="TreeWalker">
		<!-- Blocks -->
		<module name="EmptyBlock">
			<property name="option" value="statement"/>
			<property name="tokens"
                      value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_IF,LITERAL_FOR,LITERAL_TRY,LITERAL_WHILE,INSTANCE_INIT,STATIC_INIT"/>
		</module>
		<module name="EmptyBlock">
			<property name="option" value="text"/>
			<property name="tokens" value="LITERAL_CATCH"/>
		</module>
		<module name="AvoidNestedBlocks"/>
		<module name="IllegalInstantiation"/>
		<module name="InnerAssignment"/>
		<!-- <module name="MagicNumber"/>-->
		<module name="MissingSwitchDefault"/>
		<!--        Exception variable  -->
		<module name="CatchParameterName"/>
		<!-- Braces -->
		<module name="LeftCurly">
			<property name="severity" value="warning"/>
		</module>
		<module name="RightCurly"/>
		<module name="NeedBraces">
			<property name="severity" value="warning"/>
		</module>
		<!-- Modifier Checks       -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier">
			<property name="tokens" value="VARIABLE_DEF"/>
			<property name="tokens" value="CTOR_DEF"/>
			<property name="tokens" value="ENUM_DEF"/>
			<property name="tokens" value="CLASS_DEF"/>
			<property name="tokens" value="INTERFACE_DEF"/>
		</module>
		<!-- Whitespace -->
		<module name="GenericWhitespace"/>
		<module name="EmptyForInitializerPad"/>
		<module name="EmptyForIteratorPad"/>
		<module name="MethodParamPad"/>
		<module name="NoWhitespaceBefore">
			<property name="severity" value="warning"/>
		</module>
		<module name="NoWhitespaceAfter"/>
		<module name="ParenPad"/>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter">
			<property name="tokens" value="COMMA, SEMI"/>
		</module>
		<!-- Coding -->
		<module name="CovariantEquals"/>
		<module name="DefaultComesLast"/>
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<module name="ExplicitInitialization"/>
		<module name="MultipleVariableDeclarations"/>
		<module name="NoClone"/>
		<module name="NoFinalizer"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="UnnecessaryParentheses">
			<property name="severity" value="warning"/>
		</module>
		<!-- Imports -->
		<module name="AvoidStarImport"/>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<module name="IllegalImport">
			<property name="illegalPkgs" value="jdk.internal,com.beust,org.testng.collections"/>
		</module>
		<!-- Naming -->
		<!--Camel case -->
		<module name="AbbreviationAsWordInName">
			<property name="severity" value="warning"/>
		</module>
		<module name="ConstantName">
			<property name="format" value="^log(ger)?$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
		</module>
		<module name="LocalFinalVariableName">
			<property name="format" value="[a-z][a-zA-Z0-9]*_*$"/>
		</module>
		<module name="LocalVariableName"/>
		<module name="MemberName">
			<property name="format" value="^[a-z_][a-zA-Z0-9_]*_*$"/>
		</module>
		<module name="MethodName">
			<property name="format" value="^[a-z_][a-zA-Z0-9_]*$"/>
		</module>
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9_]*)*$"/>
			<property name="severity" value="info"/>
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z_][a-zA-Z0-9_]*_*$"/>
		</module>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>
		<module name="ClassTypeParameterName">
			<property name="format" value="^[A-Z]+$"/>
		</module>
		<module name="InterfaceTypeParameterName">
			<property name="format" value="^[A-Z]+$"/>
		</module>
		<module name="MethodTypeParameterName">
			<property name="format" value="^[A-Z]+$"/>
		</module>
		<!-- Checks for class design                         -->
		<module name="FinalClass"/>
		<module name="InterfaceIsType"/>
		<!-- Annotations -->
		<module name="MissingOverride"/>
		<!-- allows suppressing using the //CHECKSTYLE:ON //CHECKSTYLE:OFF -->
		<module name="SuppressionCommentFilter"/>
		<!-- to enable SuppressWarningsFilter -->
		<module name="SuppressWarningsHolder"/></module>
	<!-- Checks for whitespace     -->
	<module name="FileTabCharacter"/>
	<!-- Checks whether files end with a new line.                        -->
	<module name="NewlineAtEndOfFile">
		<property name="lineSeparator" value="lf_cr_crlf"/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="File \| Settings \| File Templates"/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="Created with IntelliJ IDEA"/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="minimum" value="0"/>
		<property name="maximum" value="0"/>
		<property name="message" value="Line has trailing spaces."/>
		<property name="severity" value="info"/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="^\s*\*\s*@author"/>
		<property name="minimum" value="0"/>
		<property name="maximum" value="0"/>
		<property name="message" value="Javadoc has illegal ''author'' tag."/>
		<property name="severity" value="info"/>
	</module>
</module>
